/*
 * Doi Server API
 * A Digital Object Identifier (DOI) is an alphanumeric string assigned to uniquely identify an object. It is tied to a metadata description of the object as well as to a digital location, such as a URL, where all the details about the object are accessible. This documentation provides an API to query the DOI-server.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jean-christophe.malapert@cnes.fr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataCiteMetadataStoreMdsApiApi
 */
@Ignore
public class DataCiteMetadataStoreMdsApiApiTest {

    private final DataCiteMetadataStoreMdsApiApi api = new DataCiteMetadataStoreMdsApiApi();

    
    /**
     * 
     *
     * This request marks a dataset as &#39;inactive&#39;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelDoiProjectTest() throws ApiException {
        String prefix = null;
        String project = null;
        String doiName = null;
        String selectedRole = null;
        Object response = api.cancelDoiProject(prefix, project, doiName, selectedRole);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get all metdata oi
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllDoiMetadataTest() throws ApiException {
        String prefix = null;
        String project = null;
        String doiName = null;
        Object response = api.getAllDoiMetadata(prefix, project, doiName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retuen a list of pairs of media type and URLs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDoiMediaTest() throws ApiException {
        String prefix = null;
        String project = null;
        String doiName = null;
        String selectedRole = null;
        List<String> response = api.getDoiMedia(prefix, project, doiName, selectedRole);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieves the landing page URL
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLandingPageUrlTest() throws ApiException {
        String prefix = null;
        String project = null;
        String doiName = null;
        String response = api.getLandingPageUrl(prefix, project, doiName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create or update doi project metadata (short explanation of status code e.g. CREATED, HANDLE_ALREADY_EXISTS)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postDoiMetadataTest() throws ApiException {
        String body = null;
        String selectedRole = null;
        String response = api.postDoiMetadata(body, selectedRole);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create a **new** doi project or update the landing page url if it the project already exists
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postLandingPageTest() throws ApiException {
        String url = null;
        String doi = null;
        String selectedRole = null;
        String response = api.postLandingPage(url, doi, selectedRole);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * add an association media/url
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postMediaTest() throws ApiException {
        String prefix = null;
        String project = null;
        String doiName = null;
        String selectedRole = null;
        String response = api.postMedia(prefix, project, doiName, selectedRole);

        // TODO: test validations
    }
    
}
